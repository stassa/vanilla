:-module(hilbert_dragon, [background_knowledge/2
                         ,metarules/2
                         ,labelled_example/2
                         ,unlabelled_example/2
                         ,f/2
                         ,g/2
                         ,x/2
                         ,y/2
                         ,plus/2
                         ,minus/2
                         ,empty/2
                         ,generate_examples/5
                         ]).

:-use_module(l_systems_constraints).
:-use_module(project_root(configuration)).
:-use_module(lib(poker/poker_configuration),[]).
:-use_module(lib(poker/poker_auxiliaries)).
:-use_module(data(poker_examples/test_harness)).

% Identify thine self.
:-poker_configuration:experiment_file(P,M)
  ,format('Loading experiment file module ~w from ~w.~n',[P,M]).

/** <module> Separate examples of the Dragon curve and Hilbert curve fractls.

==
?- _T = s/3, time( poker:learn(_T,_Pos,_Neg,_Ps) ), auxiliaries:print_clauses('Hypothesis:',_Ps), maplist(length,[_Ps,_Pos,_Neg],[Ps,Pos,Neg]).
% 275,276,117 inferences, 24.047 CPU in 33.500 seconds (72% CPU, 11447480 Lips)
Hypothesis:
s(A,B,C):-plus(B,D),plus(A,E),s(E,D,C).
s(A,B,C):-minus(B,D),minus(A,E),s(E,D,C).
s(A,B,C):-g(B,D),f(A,E),minus(E,F),g(F,G),s(G,D,C).
s(A,B,C):-f(B,D),f(A,E),plus(E,F),g(F,G),s(G,D,C).
s(A,B,B):-empty(A,B).
Ps = 5,
Pos = 58,
Neg = 1273.
==

*/

l_systems_constraints:target(s).
l_systems_constraints:invented(inv_1).
l_systems_constraints:invented(inv_2).
l_systems_constraints:invented(inv_3).
l_systems_constraints:invented(inv_4).
l_systems_constraints:invented(inv_5).
l_systems_constraints:invented(inv_6).
l_systems_constraints:preterminal(f).
l_systems_constraints:preterminal(g).
l_systems_constraints:preterminal(x).
l_systems_constraints:preterminal(y).
l_systems_constraints:preterminal(plus).
l_systems_constraints:preterminal(minus).
l_systems_constraints:preterminal(empty).

/*
% Raises error despite importing poker_auxiliaries. Why?
% Best way to use currently is to load file for the first time when this
% is commented out, then uncomment and reload the file (with make/0).

:-poker_auxiliaries:set_poker_configuration_option(clause_limit,[8]).
:-poker_auxiliaries:set_poker_configuration_option(flatten_prove_all,[true]).
:-poker_auxiliaries:set_poker_configuration_option(max_invented,[6]).
:-poker_auxiliaries:set_poker_configuration_option(unfolding_depth_limit,[100]).
:-poker_auxiliaries:set_poker_configuration_option(unfold_invented,[all]).
:-poker_auxiliaries:set_poker_configuration_option(unlabelled_examples,[0]).
:-poker_auxiliaries:set_poker_configuration_option(unlabelled_examples_order
						  ,[random]).
*/


%!	safe_example(-Example) is nondet.
%
%	Generate a safe scaffold for unlabelled examples.
%
%	For examples with list arguments, generating unlabelled examples
%	during learning can "go infinite". This predicate ensures that
%	list arguments in examples are limited in length.
%
%	This argument should not itself be a generator of ground
%	examples. This is left to the user to avoid.
%
poker_configuration:safe_example(m(s,Is,Os,[])):-
        K = 8
	,between(0,K,I)
	,length(Is,I)
	,between(0,K,J)
	,length(Os,J).

background_knowledge(s/3,[f/2
                         ,g/2
                         ,x/2
                         ,y/2
                         ,plus/2
                         ,minus/2
                         ,empty/2
                         ]).

metarules(s/3,[ls_constant,ls_variable,ls_base,chain,tri_chain]).

labelled_example(s/3,E):-
	generate_initial(dragon_curve,all,0,4,Es)
        ,member(E,Es).

unlabelled_example(s/3,E):-
        generate_initial(hilbert_curve,all,0,3,Es)
        ,member(E,Es).
unlabelled_example(s/3,E):-
% The first Hilbert Curve string that contains variable symbols has
% length 11.
        generate_initial(hilbert_curve,all,11,12,Es)
        ,findall(s(Is,Os,[])
                ,(member(s(Is,Os,[]),Es)
                 ,( member(x,Is)
                  ; member(y,Is)
                  )
                 )
                ,Vs)
        ,member(E,Vs).
unlabelled_example(s/3,E):-
	generate_initial(dragon_curve,all,5,8,Es)
        ,member(E,Es).

% BK includes all symbols in both l-systems.
f --> [f].
g --> [g].
x --> [x].
y --> [y].
plus --> [+].
minus --> [-].
empty --> [].

% Generate examples for evaluation.
% Examples are generated by test harndes predicates.
%
% TODO: needs to support multi-predicate learning.
%
generate_examples(pos,dragon_curve,all,0,14).
generate_examples(neg,not_dragon_curve,all,0,5).
